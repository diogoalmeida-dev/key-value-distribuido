services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  cockroachdb:
    image: cockroachdb/cockroach:v23.1.5
    command: start-single-node --insecure
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - ./cockroach-data:/cockroach-data

  # Serviço HTTP do Storage Node
  node1:
    build:
      context: ./backend/storage_node
      dockerfile: Dockerfile
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CACHE_TTL=300
      - COCKROACH_URL=cockroachdb://root@cockroachdb:26257/defaultdb?sslmode=disable
    ports:
      - "8100:8000"
    depends_on:
      - redis
      - cockroachdb

  # Serviço Worker separado
  worker:
    build:
      context: ./backend/storage_node
      dockerfile: Dockerfile
    command: ["python", "worker.py"]
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CACHE_TTL=300
      - COCKROACH_URL=cockroachdb://root@cockroachdb:26257/defaultdb?sslmode=disable
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - QUEUE_NAME=kv_requests
    depends_on:
      - redis
      - cockroachdb
      - rabbitmq

  gateway:
    build:
      context: ./backend/api_gateway
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - NODE_URL=http://node1:8000
    ports:
      - "8000:8000"
    depends_on:
      - node1
      - rabbitmq

volumes:
  cockroach-data: